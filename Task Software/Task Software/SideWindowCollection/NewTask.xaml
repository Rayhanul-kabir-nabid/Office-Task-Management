<Controls:MetroWindow
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                      xmlns:Controls="http://metro.mahapps.com/winfx/xaml/controls"
                      xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit" x:Class="Task_Software.NewTask"
                      Title="Tasklist"
                      Height="445.957"
                      Width="350" Background="#FF46464C" ResizeMode="NoResize" IsMaxRestoreButtonEnabled="False" IsMinButtonEnabled="False" IsWindowDraggable="False" IsCloseButtonEnabled="False" LeftWindowCommandsOverlayBehavior="HiddenTitleBar" ShowActivated="False" ShowCloseButton="False" ShowIconOnTitleBar="False" ShowMaxRestoreButton="False" ShowMinButton="False" ShowSystemMenuOnRightClick="False" ShowTitleBar="False" NonActiveBorderBrush="{x:Null}" NonActiveGlowBrush="{x:Null}" NonActiveWindowTitleBrush="{x:Null}" FontFamily="Segoe UI Light">
    <Border x:Name="mainborder" BorderThickness="1">
        <StackPanel x:Name="mainstackpanel">
            <Border  BorderThickness="0" Background="#FF2C3E50" >
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="30"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Button x:Name="closebutton" Content="r" Style="{DynamicResource CloseButtonA}" Margin="0" BorderThickness="0" Foreground="White" Click="closebutton_Click"/>

                    <Border  BorderThickness="0" Grid.Column="1">
                        <Label Content="Assign a Task" HorizontalAlignment="Center" VerticalAlignment="Center"/>

                    </Border>
                </Grid>

            </Border>
            <Border BorderBrush="Black" BorderThickness="0"  Margin="20,20,20,20">
                <xctk:WatermarkTextBox Background="LightGray" Width="300" Watermark="    Task title...." FontSize="15"/>
            </Border>
            <Border BorderBrush="Black" BorderThickness="0"  Margin="20,20,20,20">
                <xctk:WatermarkTextBox  Watermark="    Task Description..." FontSize="15" VerticalAlignment="Center" TextWrapping="Wrap" Background="#FFDEDEDE" Foreground="Black" Margin="0" VerticalScrollBarVisibility="Visible" Height="80"/>
            </Border>

            <DatePicker Margin="50,10,50,20" Background="#FFC9C9C9" Foreground="Black"/>
            <StackPanel Orientation="Horizontal" Margin="20, 10, 20, 10" HorizontalAlignment="Center">
                <xctk:WatermarkTextBox Background="LightGray" Width="225" Watermark="Enter file location...."/>
                <Button Content="Browse" Width="75" Click="Button_Click" FontFamily="Segoe UI Light"/>
            </StackPanel>
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" >
                <TextBlock Text="Send to:" Foreground="White" VerticalAlignment="Center" FontSize="14" Margin="0,0,20,0" FontFamily="Segoe UI Light" />
                <ComboBox x:Name="memberscombobox" Width="210" SelectionChanged="memberscombobox_SelectionChanged"/>
            </StackPanel>
            <ListBox x:Name="selectedmemberslist"  Margin="101,10,33,0"></ListBox>
            <StackPanel Orientation="Horizontal" Margin="27.5,20,27.5,0" HorizontalAlignment="Center" >
                <Button x:Name="button1" Content="Send" Width="75" Margin="0" Height="27" Click="button1_Click" FontFamily="Segoe UI Light" Style="{DynamicResource SendButtonStyle}">
                    <Button.Resources>
                        <Style x:Key="SendButtonStyle" TargetType="{x:Type Button}">
                            <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Upper"/>
                            <Setter Property="Controls:ControlsHelper.CornerRadius" Value="3"/>
                            <Setter Property="MinHeight" Value="25"/>
                            <Setter Property="FontWeight" Value="Bold"/>
                            <Setter Property="FontSize" Value="{DynamicResource UpperCaseContentFontSize}"/>
                            <Setter Property="FontFamily" Value="{DynamicResource DefaultFont}"/>
                            <Setter Property="Background" Value="{DynamicResource GrayBrush10}"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}"/>
                            <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                            <Setter Property="Padding" Value="5,6"/>
                            <Setter Property="BorderThickness" Value="1"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type Button}">
                                        <Grid>
                                            <Border x:Name="Background" Background="{TemplateBinding Background}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                            <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                            <Border x:Name="DisabledVisualElement" Background="{DynamicResource ControlsDisabledBrush}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                            <Controls:ContentControlEx x:Name="PART_ContentPresenter" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Background" TargetName="Background" Value="#FF549737"/>
                                            </Trigger>
                                            <Trigger Property="IsPressed" Value="True">
                                                <Setter Property="Background" TargetName="Background" Value="#FF355e22"/>
                                            </Trigger>
                                            <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                                <Setter Property="BorderThickness" TargetName="Border" Value="2"/>
                                                <Setter Property="BorderBrush" TargetName="Border" Value="{DynamicResource ButtonMouseOverBorderBrush}"/>
                                            </Trigger>
                                            <Trigger Property="IsEnabled" Value="False">
                                                <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.7"/>
                                                <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Button.Resources>
                </Button>
                <Button x:Name="button2" Content="Cancel" Width="75" Margin="135,0,0,0" Click="button2_Click" FontFamily="Segoe UI Light" Style="{DynamicResource cancleButtonStyle}">
                    <Button.Resources>
                        <Style x:Key="cancleButtonStyle" TargetType="{x:Type Button}">
                            <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Upper"/>
                            <Setter Property="Controls:ControlsHelper.CornerRadius" Value="3"/>
                            <Setter Property="MinHeight" Value="25"/>
                            <Setter Property="FontWeight" Value="Bold"/>
                            <Setter Property="FontSize" Value="{DynamicResource UpperCaseContentFontSize}"/>
                            <Setter Property="FontFamily" Value="{DynamicResource DefaultFont}"/>
                            <Setter Property="Background" Value="{DynamicResource GrayBrush10}"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}"/>
                            <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                            <Setter Property="Padding" Value="5,6"/>
                            <Setter Property="BorderThickness" Value="1"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type Button}">
                                        <Grid>
                                            <Border x:Name="Background" Background="{TemplateBinding Background}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                            <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                            <Border x:Name="DisabledVisualElement" Background="{DynamicResource ControlsDisabledBrush}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                            <Controls:ContentControlEx x:Name="PART_ContentPresenter" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Background" TargetName="Background" Value="#FFb20000"/>
                                            </Trigger>
                                            <Trigger Property="IsPressed" Value="True">
                                                <Setter Property="Background" TargetName="Background" Value="#FF7f0000"/>
                                            </Trigger>
                                            <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                                <Setter Property="BorderThickness" TargetName="Border" Value="2"/>
                                                <Setter Property="BorderBrush" TargetName="Border" Value="{DynamicResource ButtonMouseOverBorderBrush}"/>
                                            </Trigger>
                                            <Trigger Property="IsEnabled" Value="False">
                                                <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.7"/>
                                                <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Button.Resources>
                </Button>
            </StackPanel>
            



        </StackPanel>
    </Border>
</Controls:MetroWindow>
